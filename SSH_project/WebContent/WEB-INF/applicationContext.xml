<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx.xsd" >


	<!-- 定义数据源的信息 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>Oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:oracle:thin:@localhost:1521:orcl</value>
		</property>
		<property name="user">
			<value>system</value>
		</property>
		<property name="password">
			<value>password</value>
		</property>
		<property name="maxPoolSize">
			<value>80</value>
		</property>
		<property name="minPoolSize">
			<value>1</value>
		</property>
		<property name="initialPoolSize">
			<value>1</value>
		</property>
		<property name="maxIdleTime">
			<value>20</value>
		</property>
	</bean>
	<!-- 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="Oracle.jdbc.driver.OracleDriver" />
        <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl" />
        <property name="user" value="system" />
        <property name="password" value="password" />

        <property name="checkoutTimeout" value="30000" />
        <property name="idleConnectionTestPeriod" value="30"/>
        <property name="initialPoolSize" value="10" />
        <property name="maxIdleTime" value="30" />
        <property name="maxPoolSize" value="100" />
        <property name="minPoolSize" value="10" />
        <property name="maxStatements" value="10" />
        <property name="dialect" value="org.hibernate.dialect.Oracle10gDialect" />      
        

	</bean>
		 -->
	
	
	

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="mappingResources">
			<list>
				<value>com/josh/ssh/beans/User.hbm.xml</value>
				<value>com/josh/ssh/beans/BookInfo.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<prop key="show_sql">true</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- UserDao Bean -->
	<bean id="baseDao" class="com.josh.ssh.daoImpl.UserDao">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="userManager" class="com.josh.ssh.serviceImpl.UserManagerImpl">
		<property name="dao">
			<ref bean="baseDao" />
		</property>
	</bean>
	
	<bean id="regAction" class="com.josh.ssh.action.RegisterAction">
		<property name="userManager">
			<ref bean="userManager" />
		</property>
	</bean>

	<!-- Book library bean -->
	<bean id="bookDao" class="com.josh.ssh.daoImpl.BookDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="bookManager" class="com.josh.ssh.serviceImpl.BookManagerImpl">
		<property name="bookDao">
			<ref bean="bookDao" />
		</property>
	</bean>
	
	<!-- more bean definitions go here -->
	<!-- solving the transaction listener problem, make all transactional-->
	<tx:annotation-driven transaction-manager="transactionManager" 
			proxy-target-class="true" />  

	<!-- ***************************************** -->
	<!-- 
	The Unused method to deal with "read only" problem
	The problem is solved by the transaction listener
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
        	<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
        	<tx:method name="add*" propagation="REQUIRED" />
        	<tx:method name="del*" propagation="REQUIRED" />
        	<tx:method name="update*" propagation="REQUIRED" />
    	</tx:attributes>
	</tx:advice>
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<bean id="txManager"   
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"  
        p:dataSource-ref="dataSource">  
	</bean>   
	<tx:annotation-driven transaction-manager="txManager"/> 
		 -->
	<!-- ***************************************** -->
	
		 
	
	
</beans>